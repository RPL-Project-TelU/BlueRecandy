@using Microsoft.AspNetCore.Mvc.Localization
@model BlueRecandy.Models.Feedback
@inject IViewLocalizer T 
@{
    ViewData["Title"] = "Create";
}

<h1>@T["Create Feedback"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" asp-route-id="">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FeedbackContent" class="control-label">@T["FeedbackContent"]</label>
                <textarea asp-for="FeedbackContent" class="form-control" ></textarea>

                <span asp-validation-for="FeedbackContent" data-val class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Rating" class="control-label">@T["Rating"]</label>
                <input asp-for="Rating" class="form-control" />
                <span asp-validation-for="Rating" class="text-danger"></span>
            </div>
            <div class="form-group">
                @{
                    if (ViewBag.ProductId == null)
                    {
                        <input type="submit" value=@T["Create"] class="btn btn-primary" disabled/>
                    }
                    else
                    {
                        <input type="submit" value=@T["Create"] class="btn btn-primary" />
                    }
                }
            </div>
        </form>
    </div>
</div>

<div>
    @{
        if (ViewBag.ProductId == null)
        {
            <a asp-controller="Products" asp-action="Index">@T["Back to Product List"]</a>
        }
        else
        {
            <a asp-controller="Products" asp-action="Details" asp-route-id="@ViewBag.ProductId">@T["Back to Product"]</a>
        }
    }
    
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
